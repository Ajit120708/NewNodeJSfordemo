name: Migrate All Images to Artifact Registry

on:
  push:
    branches:
      - main  # Adjust branch name as needed

jobs:
  migrate:
    runs-on: self-hosted

    steps:
      # Step 1: Authenticate with GCR
      - name: Configure Docker CLI for GCR
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GCR_SA_KEY }}
          export-access-token: true

      # Step 2: Run script to pull all images from GCR
      - name: Pull all images from GCR
        run: |
          #!/bin/bash
          # Set the GCR project ID
          PROJECT_ID="goldengate-1"  # Replace "your-project-id" with your actual project ID
          # Get a list of all images in the project
          IMAGES=$(gcloud container images list --project=$PROJECT_ID --format='value(name)')
          # Iterate through each image
          for IMAGE in $IMAGES; do
              # Pull the image with the "latest" tag
              docker pull "$IMAGE:latest"
              # Get a list of tags for the current image (excluding "latest")
              TAGS=$(gcloud container images list-tags $IMAGE --project=$PROJECT_ID --format='get(tags)' | grep -v latest || true)
              
              # Iterate through each tag of the image
              for TAG in $TAGS; do
                  # Pull the image with the current tag
                  docker pull "$IMAGE:$TAG"
              done
          done

      # Step 3: Push all images to Artifact Registry
      - name: Push all images to Artifact Registry
        run: |
          #!/bin/bash
    
          # Set the GCR project ID
          GCR_PROJECT_ID="goldengate-1"  # Replace "goldengate-1" with your actual GCR project ID
          # Set the Artifact Registry project ID
          ARTIFACT_PROJECT_ID="goldengate-1"  # Replace "your-artifact-project-id" with your actual Artifact Registry project ID
          # Set the Artifact Registry repository name
          ARTIFACT_REPO_NAME="testhost-gcr"  # Replace "your-artifact-repository" with your actual Artifact Registry repository name
    
          # Authenticate with Docker to Artifact Registry
          gcloud auth configure-docker -q
    
          # Get a list of all images in the GCR project
          IMAGES=$(gcloud container images list --project=$GCR_PROJECT_ID --format='value(name)')
    
          # Iterate through each image
          for IMAGE in $IMAGES; do
              # Get a list of tags for the current image (excluding "latest") from GCR
              TAGS=$(gcloud container images list-tags $IMAGE --project=$GCR_PROJECT_ID --format='get(tags)' | grep -v latest || true)
        
              # Iterate through each tag of the image
              for TAG in $TAGS; do
                  # Pull the image with the current tag from GCR
                  docker pull "$IMAGE:$TAG"
                  # Tag the image with Artifact Registry details
                  ARTIFACT_TARGET="gcr.io/$ARTIFACT_PROJECT_ID/$ARTIFACT_REPO_NAME/$IMAGE:$TAG"
                  docker tag "$IMAGE:$TAG" "$ARTIFACT_TARGET"
                  # Push the image to Artifact Registry
                  docker push "$ARTIFACT_TARGET"
              done

              # Pull the image with the "latest" tag from GCR
              docker pull "$IMAGE:latest"
              # Tag the image with Artifact Registry details
              ARTIFACT_TARGET="gcr.io/$ARTIFACT_PROJECT_ID/$ARTIFACT_REPO_NAME/$IMAGE:latest"
              docker tag "$IMAGE:latest" "$ARTIFACT_TARGET"
              # Push the image to Artifact Registry
              docker push "$ARTIFACT_TARGET"
          done
