# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies and build
      run: |
        npm ci
        npm run build --if-present
        npm install

    - name: Setup Ansible and Run Ansible playbook
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible
        ansible-playbook -i "localhost," -c local ansible/repo.yaml

    - name: Install gcloud CLI and kubectl
      run: |
        curl -sSL https://sdk.cloud.google.com | bash
        exec -l $SHELL
        gcloud components install kubectl --quiet

    - name: Authenticate Docker with Google Cloud
      run: |
        gcloud auth activate-service-account --key-file=${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        gcloud config set project ${{ secrets.GOOGLE_PROJECT }}
        gcloud auth configure-docker us-central1-docker.pkg.dev/goldengate-1/test-project

    - name: Build and Push Docker Image
      run: |
        docker build -t us-central1-docker.pkg.dev/goldengate-1/test-project/node:latest /home/mnagaraju/Testproject-INNO
        docker push us-central1-docker.pkg.dev/goldengate-1/test-project/node:latest

        
      







      

    

      

   #   - name: Use Node.js ${{ matrix.node-version }}
   #     uses: actions/setup-node@v3
   #     with:
   #       node-version: ${{ matrix.node-version }}
   #       cache: 'npm'

   #   - run: npm ci

   #   - run: npm run build --if-present

   #   - run: npm install

   #   - name: Install the gcloud CLI
   #     uses: google-github-actions/setup-gcloud@v0.2.0
   #     with:
   #       project_id: ${{ secrets.GOOGLE_PROJECT }}
   #       service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
   #       install_components: 'gke-gcloud-auth-plugin'
   #       export_default_credentials: true

   #   - name: Build and push the Docker image
   #     env:
   #       GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
   #     run: |
   #       gcloud auth configure-docker us-central1-docker.pkg.dev
   #       docker build -t us-central1-docker.pkg.dev/goldengate-1/test-project/node:latest .
   #       docker push us-central1-docker.pkg.dev/goldengate-1/test-project/node:latest

   #   - name: Deploy to GKE
   #     env:
   #       GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
   #    run: |
   #      gcloud container clusters get-credentials innotest-cluster --region us-central1-c
   #       kubectl rollout restart deployment nodeapp-deployment 
   #      kubectl apply -f deployment.yaml
   #       kubectl apply -f service.yaml
