# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Setup Workload Identity Federation

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

      
    - name: Authenticate with Google Cloud
      uses: google-github-actions/setup-gcloud@v0.2.0
      
    - name: Get cluster credentials
      run: gcloud container clusters get-credentials testgke-cluster --region asia-south1-a
      
    - name: Create namespace
      run: |
          kubectl create namespace test-ns-gke
      
    - name: Create ServiceAccount
      run: |
          kubectl create serviceaccount test-ns-gke --namespace test-ns-gke
      
    - name: Bind IAM policy
      run: |
          gcloud projects add-iam-policy-binding goldengate-1 \
            --role=roles/container.clusterViewer \
            --member=principal://iam.googleapis.com/projects/105619775743/locations/global/workloadIdentityPools/goldengate-1.svc.id.goog/subject/ns/test-ns-gke/sa/test-ksa-gke \
            --condition=None
    - name: Build and push the docker image
      run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
          docker build -t us-central1-docker.pkg.dev/goldengate-1/demogcr-ar/node:latest .
          docker push us-central1-docker.pkg.dev/goldengate-1/demogcr-ar/node:latest
    - name: Deploy to GKE
      run: |
          gcloud container clusters get-credentials testgke-cluster --region asia-south1-a
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
