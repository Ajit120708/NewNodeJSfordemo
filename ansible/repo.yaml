---
- name: GitHub Actions Workflow with Ansible
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Run npm test
      command: npm test
      environment:
        PATH: "{{ ansible_env.PATH }}"

    - name: Build Docker image
      command: docker build -t node .
      args:
        chdir: /home/ubuntu/actions-runner/Testproject-INNO

    - name: Push Docker image to Google Artifact Registry
      command: >
        docker tag node
        us-central1-docker.pkg.dev/goldengate-1/test-project/node:latest
      environment:
        DOCKER_CLI_EXPERIMENTAL: enabled

    - name: Log in to Google Cloud
      command:gcloud auth activate-service-account testgcp-sa@goldengate-1.iam.gserviceaccount.com --key-file=cred.json
      environment:
        GOOGLE_APPLICATION_CREDENTIALS: /home/ubuntu/actions-runner/

    - name: Push Docker image to Google Artifact Registry
      command: >
        docker push us-central1-docker.pkg.dev/goldengate-1/test-project/node:latest
      environment:
        GOOGLE_APPLICATION_CREDENTIALS: /home/ubuntu/actions-runner/


  #  - name: Build Docker image
  #    command: "docker build -t us-central1-docker.pkg.dev/goldengate-1/test-project/node:latest /home/ubuntu/actions-runner/Testproject-INNO/ansible"
  #    become: true

  #  - name: Check if Docker image exists
  #    command: docker image inspect us-central1-docker.pkg.dev/goldengate-1/test-project/node:latest
  #    register: docker_image_check
  #    ignore_errors: true

  #  - name: Push Docker image to artifact registry
  #    community.general.docker_image:
  #      name: us-central1-docker.pkg.dev/goldengate-1/test-project/node:latest
  #      repository: us-central1-docker.pkg.dev/goldengate-1/test-project/node
  #      tag: latest
  #      source: build
  #    when: docker_image_check is defined and docker_image_check.stdout_lines | length > 0

